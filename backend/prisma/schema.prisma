// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String    @id @default(uuid())
  name      String
  email     String    @unique
  password  String
  role      String    @default("user")
  count     Int       @default(0)
  projects  Project[]
  tasks     Task[]
  subtasks  SubTask[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Project {
  id          String   @id @default(uuid())
  name        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String
  tasks       Task[]

  @@unique([id, userId], name: "projectId_userId")
}

model Task {
  id          String    @id @default(uuid())
  name        String
  description String?
  date        DateTime? @db.Date
  completed   Boolean?  @default(false)
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String
  subTasks    SubTask[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  project     Project   @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId   String

  @@unique([id, userId], name: "taskId_userId")
  @@unique([id, userId, projectId], name: "taskId_userId_projectId")
}

model SubTask {
  id          String    @id @default(uuid())
  name        String
  description String?
  completed   Boolean?  @default(false)
  date        DateTime? @db.Date
  task        Task      @relation(fields: [taskId], references: [id], onDelete: Cascade)
  taskId      String
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@unique([id, userId], name: "subTaskId_userId")
  @@unique([id, taskId, userId], name: "subTaskId_taskId_userId")
}
